# Generated by Django 4.2.16 on 2024-09-20 08:41

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("skill", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="CrossingStat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100)),
                ("unlock_level", models.IntegerField(default=-1)),
            ],
            options={
                "db_table": "inner_mark_crossing_stat",
            },
        ),
        migrations.CreateModel(
            name="InnerMark",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=50, unique=True)),
                (
                    "rarity",
                    models.IntegerField(choices=[(4, "R"), (5, "SR"), (6, "SSR")]),
                ),
                (
                    "stat_type",
                    models.CharField(
                        choices=[
                            ("health", "体质"),
                            ("defence", "防御"),
                            ("attack", "攻击"),
                            ("mastery", "专精"),
                            ("terminal", "终端"),
                        ],
                        max_length=50,
                    ),
                ),
                ("illustrator", models.CharField(default="", max_length=50)),
                ("implemented_at", models.DateField()),
                ("acquisition", models.JSONField(default=list)),
                ("description", models.TextField(default="")),
                ("illustration_1", models.TextField(default="")),
                ("illustration_2", models.TextField(default="")),
            ],
            options={
                "db_table": "inner_mark_info",
            },
        ),
        migrations.CreateModel(
            name="Trait",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("description", models.TextField(default="")),
                ("level_max_addition", models.TextField(default="")),
                (
                    "inner_mark",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="traits",
                        to="inner_mark.innermark",
                    ),
                ),
            ],
            options={
                "db_table": "inner_mark_trait",
            },
        ),
        migrations.CreateModel(
            name="TraitLevel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("level", models.IntegerField()),
                ("values", models.JSONField()),
                (
                    "trait",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="levels",
                        to="inner_mark.trait",
                    ),
                ),
            ],
            options={
                "db_table": "inner_mark_trait_level",
            },
        ),
        migrations.CreateModel(
            name="InnerMarkPassiveSkill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "inner_mark",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="inner_mark.innermark",
                    ),
                ),
                (
                    "passive_skill",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="skill.passiveskill",
                    ),
                ),
            ],
            options={
                "db_table": "inner_mark_passive_skill_relationship",
            },
        ),
        migrations.AddField(
            model_name="innermark",
            name="passive_skills",
            field=models.ManyToManyField(
                through="inner_mark.InnerMarkPassiveSkill", to="skill.passiveskill"
            ),
        ),
        migrations.CreateModel(
            name="EtchingStat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("level", models.IntegerField()),
                ("health", models.IntegerField()),
                ("defence", models.IntegerField()),
                ("attack", models.IntegerField()),
                ("mastery", models.IntegerField()),
                ("terminal", models.IntegerField()),
                (
                    "inner_mark",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="etching_stats",
                        to="inner_mark.innermark",
                    ),
                ),
            ],
            options={
                "db_table": "inner_mark_etching_stat",
            },
        ),
        migrations.CreateModel(
            name="CrossingStatLevel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("level", models.IntegerField()),
                ("value", models.FloatField()),
                (
                    "crossing_stat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="levels",
                        to="inner_mark.crossingstat",
                    ),
                ),
            ],
            options={
                "db_table": "inner_mark_crossing_stat_level",
            },
        ),
        migrations.AddField(
            model_name="crossingstat",
            name="inner_mark",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="crossing_stats",
                to="inner_mark.innermark",
            ),
        ),
        migrations.CreateModel(
            name="Content",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=50)),
                ("type", models.CharField(default="", max_length=50)),
                ("condition", models.CharField(default="", max_length=50)),
                ("description", models.TextField(default="")),
                ("detail", models.TextField(default="")),
                (
                    "inner_mark",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contents",
                        to="inner_mark.innermark",
                    ),
                ),
            ],
            options={
                "db_table": "inner_mark_content",
            },
        ),
        migrations.CreateModel(
            name="Awaken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("phase_number", models.IntegerField()),
                ("choice_number", models.IntegerField()),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("health", "体质"),
                            ("defence", "防御"),
                            ("attack", "攻击"),
                            ("mastery", "专精"),
                            ("terminal", "终端"),
                            ("skill_point", "技能点"),
                        ],
                        max_length=50,
                    ),
                ),
                ("value", models.JSONField(default=list)),
                (
                    "inner_mark",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="awakens",
                        to="inner_mark.innermark",
                    ),
                ),
            ],
            options={
                "db_table": "inner_mark_awaken",
            },
        ),
        migrations.AddConstraint(
            model_name="innermarkpassiveskill",
            constraint=models.UniqueConstraint(
                fields=("inner_mark", "passive_skill"),
                name="unique_inner_mark_passive_skill",
            ),
        ),
        migrations.AddConstraint(
            model_name="etchingstat",
            constraint=models.UniqueConstraint(
                fields=("inner_mark", "level"), name="unique_inner_mark_etching_stat"
            ),
        ),
        migrations.AddConstraint(
            model_name="crossingstatlevel",
            constraint=models.UniqueConstraint(
                fields=("crossing_stat", "level"), name="unique_crossing_stat_level"
            ),
        ),
        migrations.AddConstraint(
            model_name="awaken",
            constraint=models.UniqueConstraint(
                fields=("inner_mark", "phase_number", "choice_number"),
                name="unique_awaken",
            ),
        ),
    ]
